// vim: ft=groovy
properties([
    buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '3', daysToKeepStr: '', numToKeepStr: '3')),
    pipelineTriggers([[$class: 'PeriodicFolderTrigger', interval: '2d']])
])

node('arm64') {
    def cloud_image = 'https://jenkins.liquiddemo.org/__images__/factory/cloud-arm64-image.tar.xz'
    def liquid_prerequisites_cloud_image = 'https://jenkins.liquiddemo.org/job/setup-prerequisites/job/master/lastSuccessfulBuild/artifact/liquid-cloud-x86_64-prerequisites.img.xz'
    stage('ODROID C2: Host Debug Information') {
        sh 'set -x && hostname && uname -a && free -h && df -h'
    }
    deleteDir()
    checkout scm
    stage('ODROID C2: Build a Factory & Prepare Cloud Image') {
        sh 'git clone https://github.com/liquidinvestigations/factory'
        sh "cd factory/images; mkdir cloud-arm64; cd cloud-arm64; curl -L {$cloud_image} | xzcat | tar x"
    }
    stage('ODROID C2: Prepare the build') {
        sh 'cp jenkins-config.yml ansible/vars/config.yml'
        sh 'mkdir images'
        sh "curl -L {$liquid_prerequisites_cloud_image} | xzcat > images/ubuntu-odroid_c2-raw.img"
    }
    stage('ODROID C2: Build Image') {
        sh 'factory/factory run --smp 2 --memory 1024 --share .:/mnt/setup --share images:/mnt/images /mnt/setup/bin/jenkins_build /mnt/setup/bin/build_image odroid_c2 --image /mnt/images/ubuntu-odroid_c2-raw.img'
    }
    stage('ODROID C2: Archive Raw Image') {
        sh 'xz -1 < images/ubuntu-odroid_c2-raw.img > liquid-odroid_c2-arm64-raw.img.xz'
        archiveArtifacts 'liquid-odroid_c2-arm64-raw.img.xz'
    }
}
