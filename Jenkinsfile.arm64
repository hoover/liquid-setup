// vim: ft=groovy
properties([
    buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '3', daysToKeepStr: '', numToKeepStr: '3')),
    pipelineTriggers([[$class: 'PeriodicFolderTrigger', interval: '2d']])
])

node('arm64') {
    def liquid_prerequisites_odroid_c2_image = 'https://jenkins.liquiddemo.org/job/setup-prerequisites-arm64/job/master/lastSuccessfulBuild/artifact/liquid-odroid_c2-arm64-prerequisites.img.gz'
    stage('ODROID C2: Host Debug Information') {
        sh 'set -x && hostname && uname -a && free -h && df -h'
    }
    dir('setup') {
        checkout scm
    }
    try {
        stage('ODROID C2: Prepare factory') {
            sh "#!/bin/bash\npython3 <(curl -sL https://github.com/liquidinvestigations/factory/raw/master/install.py) factory"
        }
        stage('ODROID C2: Prepare the build') {
            sh 'cp setup/jenkins-config.yml setup/ansible/vars/config.yml'
            sh 'mkdir images'
            sh "wget -q $liquid_prerequisites_odroid_c2_image -O images/pre.img.gz"
            sh 'zcat images/pre.img.gz > images/ubuntu-odroid_c2-raw.img'
            sh 'rm images/pre.img.gz'
        }
        stage('ODROID C2: Build Image') {
            sh 'factory/factory run --smp 2 --memory 1024 --share setup:/mnt/setup --share images:/mnt/images /mnt/setup/bin/jenkins_build /mnt/setup/bin/build_image odroid_c2 --image /mnt/images/ubuntu-odroid_c2-raw.img'
        }
        stage('ODROID C2: Archive Raw Image') {
            sh 'gzip -1 < images/ubuntu-odroid_c2-raw.img > liquid-odroid_c2-arm64-raw.img.gz'
            archiveArtifacts 'liquid-odroid_c2-arm64-raw.img.gz'
        }
    } finally {
        deleteDir()
    }
}
