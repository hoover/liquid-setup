
// vim: ft=groovy
properties([
    buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '3', daysToKeepStr: '', numToKeepStr: '3')),
    pipelineTriggers([[$class: 'PeriodicFolderTrigger', interval: '2d']])
])

node('cloud') {
  try {
    stage('Prepare the build') {
      sh 'set -x && hostname && uname -a && free -h && df -h'
      deleteDir()
      dir('setup') {
        checkout scm
      }
      sh "#!/bin/bash\npython3 <(curl -sL https://github.com/liquidinvestigations/factory/raw/master/install.py) factory"

      sh 'cp setup/jenkins-config.yml setup/ansible/vars/config.yml'
      sh 'mkdir images'
    }
    stage('Build image') {
      sh 'factory/factory run --smp 2 --memory 2048 --share setup:/mnt/setup --share images:/mnt/images /mnt/setup/bin/jenkins_build /mnt/setup/bin/build_image cloud --no-apps'

    }
    stage('Test and archive') {
      parallel(
        test: {
          stage('Run test suite') {
            sh 'mkdir factory/images/liquid'
            sh 'cp images/ubuntu-x86_64-raw.img factory/images/liquid/disk.img'
            sh 'factory/factory run --share setup:/mnt/setup --share factory/images/liquid:/mnt/liquid /mnt/setup/bin/with-image-chroot /mnt/liquid/disk.img bash /opt/setup/ci/prepare-image-for-testing'
            sh 'echo \'{"login": {"username": "liquid-admin", "password": "liquid"}}\' > factory/images/liquid/config.json'
            try {
              sh 'factory/factory run --image liquid --smp 2 --memory 2048  --share setup:/mnt/setup PYTHONUNBUFFERED=yeah NOAPPS=yessir /mnt/setup/bin/run_first_boot_tests.py'
            }
            finally {
              junit 'setup/tests/results/*.xml'
            }
          }
        },
        archive: {
          stage('Compress and archive the image') {
            sh 'gzip -1 < images/ubuntu-x86_64-raw.img > liquid-cloud-x86_64-noapps-raw.img.gz'
            archiveArtifacts 'liquid-cloud-x86_64-noapps-raw.img.gz'
          }
        }
      )
    }
  }
  finally {
    deleteDir()
  }
}
