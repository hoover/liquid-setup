# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|

  # Fix passthrough of bad locale
  ENV['LC_ALL']="en_US.UTF-8"
  ENV['LANG']="en_US.UTF-8"
  ENV['LANGUAGE']="en_US.UTF-8"

  # tell apt-get not to expect a tty
  ENV['DEBIAN_FRONTEND']="noninteractive"

  config.vm.box = "bento/ubuntu-16.04"

  # provider-specific configurations
  def configure_vbox_provider(config)
    config.vm.provider :virtualbox do |vbox, override|
      override.vm.network "forwarded_port", guest: 80, host: 8080, auto_correct: true

      # this maps the current folder to a hidden folder in the vagrant user's
      # home directory
      override.vm.synced_folder ".", "/home/vagrant/.VagrantSetup"
      override.vm.synced_folder "../../", "/home/vagrant/setup"

      vbox.linked_clone = true

      # add time sync stuff
      vbox.customize [ "guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--timesync-set-threshold", 500 ]

    end
  end

  # proider-specific configuration
  configure_vbox_provider(config)

  def create_provision_command_set(hostname)
    <<-SHELL

    # set up locale
    export LC_ALL="en_US.UTF-8"
    export LANG="en_US.UTF-8"
    export LANGUAGE="en_US.UTF-8"
    sudo locale-gen en_US.UTF-8

    # install dependencies
    sudo apt-get install software-properties-common python-software-properties
    sudo apt-add-repository ppa:ansible/ansible
    sudo apt-get update
    sudo apt-get install -y ansible
    sudo apt-get install -y git

    # get liquidinvestigations/setup ansible scripts
    export liquid_dev_root=$HOME/Repository/Liquid
    git clone https://github.com/liquidinvestigations/setup $liquid_dev_root/setup
    cd $liquid_dev_root/setup/ansible
    git checkout avahi-daemon
    git pull

    # fill out the liquid_domain and run ansible
    touch vars/config.yml
    echo "liquid_domain: '#{hostname}'" > vars/config.yml
    sudo ansible-playbook server.yml

    # pull the liquid-core version that runs zeroconf
    cd /opt/liquid-core/liquid-core
    sudo git checkout use-zeroconf
    sudo git pull
    # install additional requirements
    sudo bash -c 'cd /opt/liquid-core/liquid-core; source ../venv/bin/activate; pip install -r requirements.txt'

    sudo /opt/common/boot.sh
    sudo supervisorctl update

    sudo service nginx reload
    sudo supervisorctl restart all

    SHELL
  end

  # rerun provisioning for each machine
  config.vm.define "one" do |machine|
    # the first machine is used to create the box, so it starts from the ubuntu image
    machine.vm.box = "bento/ubuntu-16.04"
    machine.vm.provision "shell", privileged: false, inline: create_provision_command_set("vagrant-box-one.liquid")
    machine.vm.network "private_network", ip: "10.0.2.20"
  end

  config.vm.define "two" do |machine|
    # the second machine is created from the box packaged from the first machine
    machine.vm.box = "liquid-zeroconf"
    machine.vm.provision "shell", privileged: false, inline: create_provision_command_set("vagrant-box-two.liquid")
    machine.vm.network "private_network", ip: "10.0.2.27"
  end

  config.vm.define "three" do |machine|
    # same as above
    machine.vm.box = "liquid-zeroconf"
    machine.vm.provision "shell", privileged: false, inline: create_provision_command_set("vagrant-box-three.liquid")
    machine.vm.network "private_network", ip: "10.0.2.23"
  end

end
